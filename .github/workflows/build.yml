name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import App Store Connect API key for app notarization on macOS
        run: |
          security add-generic-password -a "elliot.murphy@gmail.com" -w ${{ secrets.MAC_AC_PASSWORD }} -s "AC_PASSWORD"
          mkdir -p ~/private_keys/
          echo '${{ secrets.MAC_APP_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.MAC_APP_API_KEY_ID }}.p8
      # this is tibdex/github-app-token v1.3, pinned to the commit SHA for security
      - uses: tibdex/github-app-token@36464acb844fc53b9b8b2401da68844f6b05ebb0
        id: generate-token
        with:
          app_id: ${{ secrets.AUTH_FOR_GITHUB_APP_ID }}
          private_key: ${{ secrets.AUTH_FOR_GITHUB_PRIVATE_KEY }}
      - name: Build/release Electron app
        uses: jsoma/action-electron-builder@master
        env:
          API_KEY_ID: ${{ secrets.MAC_APP_API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.MAC_APP_API_KEY_ISSUER_ID }}
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          mac_certs: ${{ secrets.MAC_APP_CERTS }}
          mac_certs_password: ${{ secrets.MAC_APP_CERTS_PASSWORD }}
          # TODO provision windows signing certs
          #windows_certs:
          #windows_certs_password:

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}